package ${package.Controller};


import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.junli.common.utils.R;
import com.junli.system.entity.${entity};
import com.junli.system.service.${entity}Service;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {
    #end



    @Autowired
    private ${entity}Service ${table.entityPath}Service;

    /**
     *
     * @param page
     * @param ${table.entityPath}
     * @return
     */
    @GetMapping(value = "/list")
    @ResponseBody
    public Page<${entity}> list(Page page,${entity} ${table.entityPath}){
            EntityWrapper<${entity}> ${table.entityPath}EntityWrapper = new EntityWrapper<${entity}>();
            return ${table.entityPath}Service.selectPage(page,${table.entityPath}EntityWrapper );
    }

    /**
     *
     * @param ${table.entityPath}
     * @return
     */
    @PostMapping(value = "/save")
    @ResponseBody
    public R save(${entity} ${table.entityPath}){
            boolean b = ${table.entityPath}Service.insert(${table.entityPath});
            if (b){
            return  R.ok();
            }else {
            return R.error("保存失败！");
            }
    }

    /**
     *
     * @param id
     * @return
     */
    @PostMapping(value = "/del/{id}")
    @ResponseBody
    public R del(@PathVariable("id")  Long id){
            boolean b = ${table.entityPath}Service.deleteById(id);
            if (b){
            return  R.ok();
            }else {
            return R.error("删除失败！");
            }
    }

    /**
     *
     * @param ${table.entityPath}
     * @return
     */
    @PostMapping(value = "/update")
    @ResponseBody
    public R update(${entity} ${table.entityPath}){
            boolean b = ${table.entityPath}Service.updateById(${table.entityPath});
            if (b){
            return  R.ok();
            }else {
            return R.error("修改失败！");
            }
    }

}

#end
